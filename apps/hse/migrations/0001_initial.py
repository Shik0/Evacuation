# Generated by Django 2.0.5 on 2018-05-14 16:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(help_text='Name of the city', max_length=30)),
                ('country', models.CharField(help_text='Name of the country', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('badge_id', models.CharField(blank=True, default='', help_text='Guest badge ID given temporarily by the company.', max_length=30)),
                ('name', models.CharField(help_text='Guest full name', max_length=50)),
                ('entry_date', models.DateTimeField(help_text="Guest's entry date and time")),
                ('exit_date', models.DateTimeField(help_text="Guest's exit date and time")),
                ('guest_company', models.CharField(blank=True, default='', help_text='Company name of the guest', max_length=50)),
                ('guest_meet', models.CharField(blank=True, default='', help_text='Employee name(s) who will meet the guest(s).', max_length=150)),
                ('guest_vehicle_num', models.CharField(blank=True, default='', help_text='Car vehicle number of the guest', max_length=30)),
                ('office_entered', models.BooleanField(default=False, help_text='True - if guest entered to the workplace, else False')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StuffAll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('empid', models.IntegerField(default=0, help_text='Employee ID')),
                ('name', models.CharField(help_text='Full name', max_length=50)),
                ('position', models.CharField(blank=True, default='', help_text='Position of the employee', max_length=120)),
                ('department', models.CharField(blank=True, default='', help_text='Department name of the employee', max_length=120)),
                ('department_id', models.CharField(blank=True, default='', help_text='Department ID of the employee', max_length=2)),
                ('email', models.EmailField(blank=True, default='', help_text='E-mail address', max_length=254)),
                ('mobile', models.CharField(blank=True, default='', help_text='Mobile number', max_length=50)),
                ('phone', models.CharField(blank=True, default='', help_text='Phone number', max_length=50)),
                ('birth_date', models.DateField(blank=True, help_text='Birth Date', null=True)),
                ('start_date', models.DateField(blank=True, help_text="Employee's start date in the company", null=True)),
                ('building', models.CharField(blank=True, default='', help_text='Building name or number where employee is sitting', max_length=20)),
                ('floor', models.SmallIntegerField(blank=True, help_text="The Floor number where employee's room located", null=True)),
                ('workplace', models.CharField(blank=True, choices=[(' ', ' '), ('po', 'Plant Office'), ('co', 'City Office')], default=' ', help_text='Workplace of the employee, for instance, Plant, City Office ect.', max_length=2)),
                ('genre', models.CharField(blank=True, choices=[(' ', ' '), ('m', 'Male'), ('f', 'Female')], default=' ', help_text='Employee genre', max_length=1)),
                ('profilepic', models.ImageField(help_text='Profile picture', null=True, upload_to='')),
                ('on_vacation', models.BooleanField(default=False, help_text='True - employee is on vacation, False - employee is not on vacation')),
                ('city', models.ForeignKey(help_text='Name of the city where employee is working', on_delete=django.db.models.deletion.CASCADE, to='hse.Country')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StuffInside',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name', max_length=50)),
                ('position', models.CharField(blank=True, default='', help_text='Position of the employee', max_length=120)),
                ('department', models.CharField(blank=True, default='', help_text='Department name of the employee', max_length=120)),
                ('department_id', models.CharField(blank=True, default='', help_text='Department ID of the employee', max_length=2)),
                ('email', models.EmailField(blank=True, default='', help_text='E-mail address', max_length=254)),
                ('mobile', models.CharField(blank=True, default='', help_text='Mobile number', max_length=50)),
                ('phone', models.CharField(blank=True, default='', help_text='Phone number', max_length=50)),
                ('birth_date', models.DateField(blank=True, help_text='Birth Date', null=True)),
                ('start_date', models.DateField(blank=True, help_text="Employee's start date in the company", null=True)),
                ('building', models.CharField(blank=True, default='', help_text='Building name or number where employee is sitting', max_length=20)),
                ('floor', models.SmallIntegerField(blank=True, help_text="The Floor number where employee's room located", null=True)),
                ('genre', models.CharField(blank=True, choices=[(' ', ' '), ('m', 'Male'), ('f', 'Female')], default=' ', help_text='Employee genre', max_length=1)),
                ('profilepic', models.ImageField(help_text='Profile picture', null=True, upload_to='')),
                ('office_entered', models.BooleanField(default=False, help_text='True - if employee entered to the workplace, else False (value office_left)')),
                ('office_left', models.BooleanField(default=False, help_text='True - if employee has left the workplace, else False (value office_entered)')),
                ('left_time', models.DateTimeField(blank=True, help_text='Date and time when employee left the workplace', null=True)),
                ('assembly_point_checked', models.BooleanField(default=False, help_text='True - employee checked him(her)self in the assembly point, else False')),
                ('city', models.ForeignKey(help_text='Employee ID number', on_delete=django.db.models.deletion.CASCADE, to='hse.Country')),
                ('empid', models.ForeignKey(help_text='Employee ID', on_delete=django.db.models.deletion.CASCADE, to='hse.StuffAll')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
    ]
